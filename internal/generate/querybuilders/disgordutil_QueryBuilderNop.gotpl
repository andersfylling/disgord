// Code generated by generate/interfaces; DO NOT EDIT.

package disgordutil

import (
    "context"
    "github.com/andersfylling/disgord"
    "github.com/andersfylling/disgord/internal/gateway"
    "net/url"
)

func mergeFlags(flags []disgord.Flag) (f disgord.Flag) {
	for i := range flags {
		f |= flags[i]
	}

	return f
}

{{ range $type := . }}

type {{ $type.Name.Name }}Nop struct {
    Ctx context.Context
    Flags {{ $type.DiscordTypePrefix }}.Flag
    ChannelID {{ $type.DiscordTypePrefix }}.Snowflake
    GuildID {{ $type.DiscordTypePrefix }}.Snowflake
    UserID {{ $type.DiscordTypePrefix }}.Snowflake
}

var _ {{ $type.DiscordTypePrefix }}.{{ $type.Name.Name }} = &{{ $type.Name.Name }}Nop{}

{{ if $type.HasWithContext }}
func ({{ $type.ShortName }} {{ $type.Name.Name | RemovePointer }}Nop) WithContext(ctx context.Context) {{ $type.WithContextReturnType }} {
    {{ $type.ShortName }}.Ctx = ctx
    return &{{ $type.ShortName }}
}
{{ end }}

{{ if $type.HasWithFlags }}
func ({{ $type.ShortName }} {{ $type.Name.Name | RemovePointer }}Nop) WithFlags(flags ...{{ $type.DiscordTypePrefix }}.Flag) {{ $type.WithFlagsReturnType }} {
    {{ $type.ShortName }}.Flags = mergeFlags(flags)
    return &{{ $type.ShortName }}
}
{{ end }}

{{- range $i, $field := $type.Fields }}
func ({{ $type.ShortName }} *{{ $type.Name.Name }}Nop) {{ $field.MethodName }}({{ $field.Parameters }}) {{ $field.ReturnTypes }} {
    return {{ $field.ReturnValues }}
}
{{ end }}


{{ end }}